<?xml version="1.0" encoding="UTF-8"?>
<project name="calabash" default="default" basedir=".">
  <description>Builds the distribution jar because IntelliJ sucks at it</description>

  <property file="resources/etc/vendor.properties"/>
  <property file="resources/etc/version.properties"/>

  <property name="version" value="${version.major}.${version.minor}.${version.release}"/>

  <!-- so I can point to a directory containing commercial jars -->
  <property name="lib.dir" value="lib"/>

  <property name="dist.dir" value="dist"/>
  <property name="build.dir" value="out/production/Calabash"/>

  <!-- where my Saxon EE license lives -->
  <property name="license.dir" value="/Users/ndw/java"/>

  <property name="tests.root" value="http://tests.xproc.org"/>
  <property name="test.report" value="test/report.xml"/>
  <property name="test.errors" value="test/errors.txt"/>
  <property name="test.format" value="test/report.html"/>
  <property name="submit.username" value="calabash"/>
  <property name="submit.password" value=""/>

  <property name="izpack.dir" value="/Applications/IzPack"/>

  <available property="izpack.present"
             classname="com.izforge.izpack.ant.IzPackTask"
             classpath="${izpack.dir}/lib/compiler.jar"/>

  <target name="izpacktool" if="izpack.present">
    <taskdef name="izpack"
             classpath="${izpack.dir}/lib/compiler.jar"
             classname="com.izforge.izpack.ant.IzPackTask"/>
  </target>

  <target name="izpackmissing" unless="izpack.present">
    <echo>Cannot find IzPack; request to build dist ignored.</echo>
  </target>

  <path id="build.classpath">
    <fileset dir="${lib.dir}">
      <include name="*.jar"/>
    </fileset>
  </path>

  <path id="full.classpath">
    <pathelement location="${license.dir}"/>
    <fileset dir="${lib.dir}">
      <include name="*.jar"/>
    </fileset>
  </path>

  <available property="saxon94"
             classname="net.sf.saxon.expr.flwor.ForClause">
    <classpath refid="build.classpath"/>
  </available>

  <pathconvert property="run.classpath" refid="build.classpath" pathsep=" ">
    <map from="${basedir}/" to=""/>
  </pathconvert>

  <target name="default" depends="jar"/>

  <target name="init" depends="saxon-version">
    <mkdir dir="${build.dir}"/>
    <property name="dist-version" value="${version}-${saxon-version}"/>
    <property name="install.dir" value="${dist.dir}/calabash-${dist-version}"/>
  </target>

  <target name="saxon94" if="saxon94">
    <property name="saxon-version" value="94"/>
  </target>

  <target name="saxon93" unless="saxon94">
    <property name="saxon-version" value="93"/>
  </target>

  <target name="saxon-version" depends="saxon93,saxon94">
    <echo>Currently using saxon ${saxon-version}</echo>
  </target>

  <target name="update-output">
    <copy todir="${build.dir}/etc">
      <fileset dir="resources/etc">
        <exclude name="install-proto.xsl"/>
      </fileset>
    </copy>
  </target>

  <target name="jar" depends="compile">
    <taskdef resource="aQute/bnd/ant/taskdef.properties"
      classpath="osgi/bnd.jar"/> 
    <bnd 
      classpath="${build.dir}" 
      eclipse="false" 
      failok="false" 
      exceptions="true" 
      files="osgi/calabash.bnd"
      output="calabash.jar"/>
  </target>

  <target name="clean" depends="init">
    <delete dir="${build.dir}"/>
    <delete dir="${dist.dir}"/>
  </target>

  <target name="distclean" depends="init">
    <delete dir="${dist.dir}"/>
  </target>

  <target name="compile" depends="init,optional-features,update-output">
    <!-- debugging
    <property name="theclasspath" refid="build.classpath"/>
    <echo>Classpath: ${theclasspath}</echo>
    -->

    <javac destdir="${build.dir}"
	   classpathref="build.classpath"
           includeantruntime="false">
      <!--
      <compilerarg value="-Xlint"/>
      -->
      <src path="src"/>
      <!-- Optional features -->
      <exclude name="com/xmlcalabash/extensions/MetadataExtractor.java"/>
      <exclude name="com/xmlcalabash/extensions/DeltaXML.java"/>
      <exclude name="com/xmlcalabash/extensions/SendMail.java"/>
      <exclude name="com/xmlcalabash/extensions/xmlunit/Compare.java"/>
      <exclude name="com/xmlcalabash/extensions/marklogic/XCCAdhocQuery.java"/>
      <exclude name="com/xmlcalabash/extensions/marklogic/XCCInsertDocument.java"/>
      <exclude name="com/xmlcalabash/extensions/marklogic/XCCInvokeModule.java"/>
      <exclude name="com/xmlcalabash/util/FoXEP.java"/>
      <exclude name="com/xmlcalabash/util/FoFOP.java"/>
      <exclude name="com/xmlcalabash/util/FoAH.java"/>
      <exclude name="com/xmlcalabash/util/CssAH.java"/>

      <!-- Only for debugging -->
      <exclude name="com/xmlcalabash/drivers/SaxonProblem.java"/>
    </javac>
  </target>

  <!-- this target won't work unless you have all the optional/commercial jars -->
  <target name="compile-everything" depends="init,update-output">
    <javac destdir="${build.dir}"
           includeantruntime="false">
      <classpath>
        <!-- Yes, I know these are explicit. This target is really only for me. -->
        <fileset dir="lib">
          <include name="*.jar"/>
        </fileset>
      </classpath>
      <src path="src"/>
      <!-- <compilerarg value="-Xlint:unchecked"/> -->
      <!-- Only for debugging -->
      <exclude name="com/xmlcalabash/drivers/SaxonProblem.java"/>
    </javac>
  </target>

  <target name="optional-features" depends="compile-MetadataException,
                                            compile-XEP,compile-FOP,compile-AH,compile-SendMail,
                                            compile-DeltaXML,compile-XMLUnit,compile-XCC"/>

  <condition property="XMLUnit.present">
    <and>
      <available classname="org.custommonkey.xmlunit.XMLAssert">
        <classpath refid="build.classpath"/>
      </available>
      <available classname="junit.framework.AssertionFailedError">
        <classpath refid="build.classpath"/>
      </available>
    </and>
  </condition>

  <target name="compile-XMLUnit" depends="init" if="XMLUnit.present">
    <javac destdir="${build.dir}"
	   classpathref="build.classpath"
           includeantruntime="false">
      <src path="src"/>
      <include name="com/xmlcalabash/extensions/xmlunit/Compare.java"/>
    </javac>
  </target>

  <available classname="com.marklogic.xcc.ContentSource" property="MarkLogicXCC.present">
    <classpath refid="build.classpath"/>
  </available>

  <target name="compile-XCC" depends="init" if="MarkLogicXCC.present">
    <javac destdir="${build.dir}"
	   classpathref="build.classpath"
           includeantruntime="false">
      <src path="src"/>
      <include name="com/xmlcalabash/extensions/marklogic/XCCAdhocQuery.java"/>
      <include name="com/xmlcalabash/extensions/marklogic/XCCInsertDocument.java"/>
      <include name="com/xmlcalabash/extensions/marklogic/XCCInvokeModule.java"/>
    </javac>
  </target>

  <available classname="com.drew.metadata.MetadataException" property="MetadataException.present">
    <classpath refid="build.classpath"/>
  </available>

  <target name="compile-MetadataException" depends="init" if="MetadataException.present">
    <javac destdir="${build.dir}"
	   classpathref="build.classpath"
           includeantruntime="false">
      <!--
      <compilerarg value="-Xlint"/>
      -->
      <src path="src"/>
      <include name="com/xmlcalabash/extensions/MetadataExtractor.java"/>
    </javac>
  </target>

  <available classname="com.deltaxml.core.DXPConfiguration" property="DeltaXML.present">
    <classpath refid="build.classpath"/>
  </available>

  <target name="compile-DeltaXML" depends="init" if="DeltaXML.present">
    <javac destdir="${build.dir}"
	   classpathref="build.classpath"
           includeantruntime="false">
      <src path="src"/>
      <include name="com/xmlcalabash/extensions/DeltaXML.java"/>
    </javac>
  </target>

  <available classname="com.renderx.xep.FormatterImpl" property="XEP.present">
    <classpath refid="build.classpath"/>
  </available>

  <target name="compile-XEP" depends="init" if="XEP.present">
    <javac destdir="${build.dir}"
	   classpathref="build.classpath"
           includeantruntime="false">
      <src path="src"/>
      <include name="com/xmlcalabash/util/FoXEP.java"/>
    </javac>
  </target>

  <available classname="jp.co.antenna.XfoJavaCtl.XfoObj" property="AH.present">
    <classpath refid="build.classpath"/>
  </available>

  <target name="compile-AH" depends="init" if="AH.present">
    <javac destdir="${build.dir}"
	   classpathref="build.classpath"
           includeantruntime="false">
      <src path="src"/>
      <include name="com/xmlcalabash/util/FoAH.java"/>
      <include name="com/xmlcalabash/util/CssAH.java"/>
    </javac>
  </target>

  <available classname="javax.mail.Address" property="Mail.present">
    <classpath refid="build.classpath"/>
  </available>

  <target name="compile-SendMail" depends="init" if="Mail.present">
    <javac destdir="${build.dir}"
	   classpathref="build.classpath"
           includeantruntime="false">
      <src path="src"/>
      <include name="com/xmlcalabash/extensions/SendMail.java"/>
    </javac>
  </target>

  <condition property="FOP.present">
    <!-- It probably requires more than these, but if you've got all these... -->
    <and>
      <available classname="org.apache.fop.apps.Fop">
        <classpath refid="build.classpath"/>
      </available>
      <available classname="org.apache.fop.apps.FopFactory">
        <classpath refid="build.classpath"/>
      </available>
      <available classname="org.apache.fop.apps.MimeConstants">
        <classpath refid="build.classpath"/>
      </available>
      <available classname="org.apache.xmlgraphics.util.MimeConstants">
        <classpath refid="build.classpath"/>
      </available>
    </and>
  </condition>

  <target name="compile-FOP" depends="init" if="FOP.present">
    <javac destdir="${build.dir}"
	   classpathref="build.classpath"
           includeantruntime="false">
      <src path="src"/>
      <include name="com/xmlcalabash/util/FoFOP.java"/>
    </javac>
  </target>

  <target name="dist" depends="init,compile-everything,distrib,izpacktool,izpackmissing"
          if="izpack.present">
    <delete file="${dist.dir}/install.xml"/>

    <xslt in="resources/etc/install-proto.xsl" style="resources/etc/install-proto.xsl"
          out="${dist.dir}/install.xml">
      <param name="version.label" expression="${dist-version}"/>
    </xslt>

    <echo file="${install.dir}/calabash">#!/bin/sh
java -Xmx1024m -jar %INSTALL_PATH/calabash.jar "$@"
    </echo>

    <echo file="${install.dir}/calabash.bat">
@java -Xmx1024m -jar "%INSTALL_PATH\calabash.jar" %*
    </echo>

    <izpack input="${dist.dir}/install.xml"
            output="${dist.dir}/calabash-${dist-version}.jar"
            installerType="standard"
            basedir="${dist.dir}"
            izPackDir="${izpack.dir}"/>
  </target>

  <target name="distrib" depends="jar">
    <mkdir dir="${install.dir}"/>
    <mkdir dir="${install.dir}/lib"/>
    <mkdir dir="${install.dir}/docs"/>
    <mkdir dir="${install.dir}/schemas"/>
    <mkdir dir="${install.dir}/xpl"/>
    <ant dir="docs"/>
    <mkdir dir="${install.dir}/docs/notices"/>
    <mkdir dir="${install.dir}/docs/reference"/>
    <mkdir dir="${install.dir}/docs/reference/css"/>
    <mkdir dir="${install.dir}/docs/reference/js"/>
    <mkdir dir="${install.dir}/docs/reference/img"/>
    <copy todir="${install.dir}/docs/reference">
      <fileset dir="docs/build"/>
    </copy>
    <copy todir="${install.dir}/docs/reference/css">
      <fileset dir="docs/css"/>
    </copy>
    <copy todir="${install.dir}/docs/reference/js">
      <fileset dir="docs/js"/>
    </copy>
    <copy todir="${install.dir}/docs/reference/img">
      <fileset dir="docs/img"/>
    </copy>

    <copy todir="${install.dir}/docs/notices">
      <fileset file="resources/notices/**"/>
    </copy>
    <copy todir="${install.dir}">
      <fileset file="docs/README"/>
    </copy>
    <copy todir="${install.dir}" file="calabash.jar"/>

    <copy todir="${install.dir}/lib">
      <fileset file="lib/commons*.jar"/>
      <fileset file="lib/saxon9he.jar"/>
    </copy>

    <copy todir="${install.dir}/xpl">
      <fileset file="xpl/**xpl">
        <exclude name="submit-test-report.xpl"/>
      </fileset>
    </copy>

    <copy todir="${install.dir}/schemas">
      <fileset file="resources/schemas/**"/>
    </copy>

    <echo file="${install.dir}/VERSION">${dist-version}</echo>

    <zip destfile="${dist.dir}/calabash-${dist-version}.zip"
         basedir="${dist.dir}"
         includes="calabash-${dist-version}/**"/>
  </target>

  <target name="test-extensions" depends="jar">
    <echo>Running test-extensions...</echo>
    <echo>  Sending report to test/extensions.xml; errors to ${test.errors}</echo>
    <java fork="true" classname="com.xmlcalabash.drivers.RunTestReport"
          output="test/extensions.xml" error="${test.errors}">
      <classpath>
        <pathelement location="calabash.jar"/>
        <path refid="full.classpath"/>
      </classpath>
      <jvmarg value="-Xmx1024m"/>
      <sysproperty key="com.xmlcalabash.phonehome" value="false"/>
      <arg value="-D"/>
      <arg value="-a"/>
      <arg value="test/extensions/test-suite.xml"/>
    </java>
  </target>

  <target name="report-extensions" depends="test-extensions">
    <java fork="true" classname="net.sf.saxon.Transform">
      <classpath refid="full.classpath"/>
      <arg value="-o:test/extensions.html"/>
      <arg value="-s:test/extensions.xml"/>
      <arg value="-xsl:resources/format-report.xsl"/>
    </java>
    <echo>Report is in test/extensions.html</echo>
  </target>


  <target name="test-suite" depends="jar">
    <echo>Running test-suite...this may take a few minutes...</echo>
    <echo>  Sending report to ${test.report}; errors to ${test.errors}</echo>
    <java fork="true" classname="com.xmlcalabash.drivers.RunTestReport"
          output="${test.report}" error="${test.errors}">
      <classpath>
        <pathelement location="calabash.jar"/>
        <path refid="full.classpath"/>
      </classpath>
      <jvmarg value="-Xmx1024m"/>
      <sysproperty key="com.xmlcalabash.phonehome" value="false"/>
      <arg value="-D"/>
      <arg value="-a"/>
      <arg value="${tests.root}/tests/required/test-suite.xml"/>
      <arg value="${tests.root}/tests/serialization/test-suite.xml"/>
      <arg value="${tests.root}/tests/optional/test-suite.xml"/>
      <arg value="${tests.root}/tests/extension/test-suite.xml"/>
    </java>
  </target>

  <target name="report" depends="test-suite">
    <java fork="true" classname="net.sf.saxon.Transform">
      <classpath refid="full.classpath"/>
      <arg value="-o:${test.format}"/>
      <arg value="-s:${test.report}"/>
      <arg value="-xsl:resources/format-report.xsl"/>
    </java>
    <echo>Report is in ${test.format}</echo>
  </target>

  <target name="publish-report" depends="test-suite">
    <java fork="true" classname="com.xmlcalabash.drivers.Main">
      <classpath>
        <pathelement location="calabash.jar"/>
        <path refid="full.classpath"/>
      </classpath>
      <jvmarg value="-Xmx1024m"/>
      <sysproperty key="com.xmlcalabash.phonehome" value="false"/>
      <arg value="-isource=${test.report}"/>
      <arg value="xpl/submit-test-report.xpl"/>
      <arg value="username=${submit.username}"/>
      <arg value="password=${submit.password}"/>
    </java>
  </target>

</project>
